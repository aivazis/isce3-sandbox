// -*- C++ -*-
//
// michael a.g. aïvázis <michael.aivazis@para-sim.com>
// (c) 2003-2016 all rights reserved
//

// code guard
#if !defined(isce_image_Image_icc)
#error This header file contains implementation details of class isce::image::Image
#endif


// meta-methods
template <typename pixel>
isce::image::Image<pixel>::
Image(uri_t source, tile_type tile, offset_type offset, bool writable) :
    _source {source, map_type::entireFile, offset, writable},
    _tile {tile},
    _data(static_cast<pixel_type *>(_source.buffer()))
{}


// interface
template <typename pixel>
pixel
isce::image::Image<pixel>::
get(index_type index) const {
    // compute the offset
    auto offset = _tile[index];

    // make a channel
    pyre::journal::debug_t channel("isce.image");
    // show me
    channel
        << pyre::journal::at(__HERE__)
        << "data[ (" << index[0] << ", " << index[1] << ", " << index[2] << ") ]"
        << " = "
        << "*(" << _data << " + " << offset*sizeof(pixel_type) << ")"
        << " = "
        << _data[offset]
        << pyre::journal::endl;

    // get and return the data stored at that location
    return _data[offset];
}


// syntactic sugar
template <typename pixel>
pixel
isce::image::Image<pixel>::
operator[](index_type index) const {
    // delegate to the method
    return get(index);
}


// end of file
